{"version":3,"sources":["components/parkingspace.js","components/parkinglot.js","App.js","serviceWorker.js","index.js"],"names":["ParkingSpace","props","Card","style","height","width","CardBody","Media","body","heading","fontSize","Container","fluid","Row","Col","Button","Component","layout","layoutGenerator","mobile","desktop","OnMobile","is","OnDesktop","GridComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9079a506.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Card, CardBody, Col, Row,\r\n  Button, Container, Media\r\n} from 'reactstrap';\r\n\r\nexport default class ParkingSpace extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return(\r\n            <Card style={{height: \"80px\", width: \"200px\"}}>\r\n                <CardBody>\r\n                    \r\n                <Media>\r\n                    <img width={30} height={30}/>\r\n                    <Media body>\r\n                        <Media heading style={{fontSize: \"15px\"}}>\r\n                            Name gooz Here\r\n                        </Media>\r\n                    <Container fluid>\r\n                        <Row style={{width: \"120px\"}}>\r\n                            <Col>\r\n                                <Button style={{height: \"25px\", width: \"25px\", fontSize: \"11px\"}}>H</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button style={{height: \"25px\", width: \"25px\", fontSize: \"11px\"}}>G</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    </Media>\r\n                </Media>\r\n                </CardBody>\r\n                </Card>\r\n        )\r\n    }\r\n}\r\n","// Module Imports\r\nimport React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { layoutGenerator } from 'react-break';\r\n\r\n// Component Imports\r\nimport ParkingSpace from './parkingspace';\r\n\r\n// Layout Parameters for responsive layout changes at breakpoints\r\nconst layout = layoutGenerator({\r\n    mobile: 0,\r\n    desktop: 800\r\n  });\r\nconst OnMobile = layout.is('mobile');\r\nconst OnDesktop = layout.is('desktop');\r\n\r\n// Component Class\r\nexport default class GridComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n<div>\r\n<OnMobile>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n        </Row>\r\n        <p style={{height: \"1px\"}}></p>\r\n        <Row>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n        </Row>\r\n        <p style={{height: \"1px\"}}></p>\r\n        <Row>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n        </Row>\r\n        <p style={{height: \"1px\"}}></p>\r\n        <Row>\r\n            <Col>\r\n                <ParkingSpace></ParkingSpace>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</OnMobile>\r\n<OnDesktop>\r\n<Container fluid>\r\n    <Row>\r\n        <Col> </Col>\r\n        <Col> </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n    </Row>\r\n    <p style={{height: \"1px\"}}></p>\r\n    <Row>\r\n        <Col> </Col>\r\n        <Col> </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n    </Row>\r\n    <p style={{height: \"1px\"}}></p>\r\n    <Row>\r\n        <Col> </Col>\r\n        <Col> </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n    </Row>\r\n    <p style={{height: \"1px\"}}></p>\r\n    <Row>\r\n        <Col> </Col>\r\n        <Col> </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col> \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n    </Row>\r\n    <p style={{height: \"1px\"}}></p>\r\n    <Row>\r\n        <Col>\r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col>\r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col>\r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n    </Row>\r\n    <p style={{height: \"1px\"}}></p>\r\n    <Row>\r\n        <Col>  \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col> </Col>\r\n        <Col> </Col>\r\n    </Row>\r\n    <p style={{height: \"1px\"}}></p>\r\n    <Row>\r\n        <Col>  \r\n            <ParkingSpace></ParkingSpace>\r\n        </Col>\r\n        <Col> </Col>\r\n        <Col> </Col>\r\n    </Row>\r\n</Container>\r\n</OnDesktop>\r\n</div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\n\nimport ParkingSpace from \"./components/parkingspace\";\nimport ParkingLot from './components/parkinglot';\n\nfunction App() {\n  return ( \n    <div>\n      <h1> You're gonna be rich kid </h1>\n      <ParkingLot />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}